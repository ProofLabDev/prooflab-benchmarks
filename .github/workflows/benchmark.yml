name: Run Benchmarks

on:
  workflow_dispatch:
    inputs:
      instance_families:
        description: 'Instance families to benchmark (comma-separated: c7i,c7a,m7i,m7a)'
        required: true
        type: string
        default: 'c7i,c7a'
      cpu_sizes:
        description: 'CPU sizes to benchmark (comma-separated: 8,16,32,64,96)'
        required: true
        type: string
        default: '64'
      docker_tag:
        description: 'Benchmark Docker image tag'
        required: true
        type: string
        default: 'main'
      programs:
        description: 'Comma-separated list of programs (fibonacci,rsa,ecdsa,json,regex,sha,tendermint,zkquiz,bubble_sort,iseven)'
        required: true
        type: string
        default: 'fibonacci'
      prover:
        description: 'Prover to use'
        required: true
        type: choice
        options:
          - 'sp1'
          - 'risc0'
      use_cache:
        description: 'Use GitHub Actions Rust cache'
        required: true
        type: boolean
        default: true

jobs:
  matrix-prep:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          # Convert comma-separated values to arrays
          IFS=',' read -ra FAMILIES <<< "${{ inputs.instance_families }}"
          IFS=',' read -ra CPUS <<< "${{ inputs.cpu_sizes }}"
          
          # Create matrix with specified CPU sizes for each family
          matrix="{\"include\":["
          for family in "${FAMILIES[@]}"; do
            for cpu in "${CPUS[@]}"; do
              [[ $matrix != "{\"include\":[" ]] && matrix="$matrix,"
              matrix="$matrix{\"family\":\"$family\",\"cpu\":$cpu}"
            done
          done
          matrix="$matrix]}"
          
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  run-benchmark:
    needs: matrix-prep
    name: Run ${{ matrix.family }} ${{ matrix.cpu }}CPU Benchmark
    strategy:
      matrix: ${{fromJson(needs.matrix-prep.outputs.matrix)}}
      fail-fast: false
    runs-on:
      - runs-on=${{ github.run_id }}
      - runner=${{ matrix.cpu }}cpu-linux-x64
      - family=${{ matrix.family }}
      - spot=true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Rust cache
        if: inputs.use_cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-${{ matrix.family }}-${{ matrix.cpu }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.family }}-${{ matrix.cpu }}-cargo-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull benchmark image
        run: |
          docker pull ghcr.io/prooflabdev/zkrust:${{ inputs.docker_tag }}

      - name: Run benchmarks
        run: |
          # Split the comma-separated programs into an array
          IFS=',' read -ra PROGRAMS <<< "${{ inputs.programs }}"
          
          # Create results directory with instance info
          mkdir -p "telemetry/${{ matrix.family }}_${{ matrix.cpu }}cpu"
          
          # Create cargo cache directories if they don't exist
          mkdir -p ~/.cargo/registry
          mkdir -p ~/.cargo/git
          
          # Run benchmark for each program
          for program in "${PROGRAMS[@]}"; do
            docker run \
              --network host \
              -v "$(pwd)/telemetry/${{ matrix.family }}_${{ matrix.cpu }}cpu:/zkrust/telemetry" \
              ${{ inputs.use_cache && '-v ~/.cargo/registry:/root/.cargo/registry -v ~/.cargo/git:/root/.cargo/git' || '' }} \
              -e ZKRUST_DIR=/root/.zkRust \
              -e ZKRUST_BIN_DIR=/root/.zkRust/bin \
              -e RUST_LOG=info \
              -e INSTANCE_FAMILY=${{ matrix.family }} \
              -e CPU_COUNT=${{ matrix.cpu }} \
              ghcr.io/prooflabdev/zkrust:${{ inputs.docker_tag }} \
              make benchmark_${{ inputs.prover }}_${program}
          done

      # Fix cache permissions before saving
      - name: Fix cache permissions
        if: inputs.use_cache
        run: |
          sudo chown -R $(id -u):$(id -g) ~/.cargo/registry
          sudo chown -R $(id -u):$(id -g) ~/.cargo/git

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.family }}-${{ matrix.cpu }}cpu
          path: telemetry/${{ matrix.family }}_${{ matrix.cpu }}cpu/ 